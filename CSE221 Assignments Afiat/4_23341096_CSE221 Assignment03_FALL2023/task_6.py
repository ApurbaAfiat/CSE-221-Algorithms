# -*- coding: utf-8 -*-
"""Task-6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lkVWMTWPYvOJoUqtoGpR3xzEtfQK91Jr
"""

def partition(array, start, end):
    pivot = array[end]
    i = start - 1
    for j in range(start, end):
        if array[j] <= pivot:
            i = i + 1
            array[i], array[j] = array[j], array[i]
    array[i + 1], array[end] = array[end], array[i + 1]
    return i + 1

def find_kth_smallest(array, start, end, k):
    if start <= end:
        part = partition(array, start, end)
        if part == k - 1:
            return array[part]
        elif part > k - 1:
            return find_kth_smallest(array, start, part - 1, k)
        elif part < k - 1:
            return find_kth_smallest(array, part + 1, end, k)

input_file = open('/content/Input6.txt', 'r')
output_file = open('/content/Output6.txt', 'w')
n = int(input_file.readline())
arr = list(map(int, input_file.readline().split(' ')))
k_values = int(input_file.readline())

for _ in range(k_values):
    k = int(input_file.readline())
    output_file.write(f'{find_kth_smallest(arr, 0, n - 1, k)}\n')

input_file.close()
output_file.close()