# -*- coding: utf-8 -*-
"""Task-3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rsSGpjhNEMdMUmc0Y_jDRptgHDlXU3Yg
"""

def merge(left, right, inversion_count):
    merged = []
    i, j = 0, 0
    count = inversion_count

    while i < len(left) and j < len(right):
        if left[i] > right[j]:
            merged += [right[j]]
            j += 1
            count += len(left) - i
        else:
            merged += [left[i]]
            i += 1

    merged += left[i:]
    merged += right[j:]
    return merged, count

def count_inversions(arr, inversion_count=0):
    if len(arr) == 1:
        return arr, 0
    mid = len(arr) // 2
    left, count1 = count_inversions(arr[:mid])
    right, count2 = count_inversions(arr[mid:])
    return merge(left, right, count1 + count2)

input_file = open('/content/Input3.txt', 'r')
output_file = open('/content/Output3.txt', 'w')

size = int(input_file.readline())
array = list(map(int, input_file.readline().split(' ')))
output_file.write(f'{count_inversions(array)[1]}')

input_file.close()
output_file.close()