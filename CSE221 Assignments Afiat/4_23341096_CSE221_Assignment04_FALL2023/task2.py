# -*- coding: utf-8 -*-
"""Task2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1N5hf5Ro61Jpo93e_ELvqDHvvdyfvGK2D
"""

from collections import defaultdict, deque

def bfs(graph, start):
    visited = set()
    queue = deque([start])
    visited.add(start)
    bfs_order = []

    while queue:
        node = queue.popleft()
        bfs_order.append(node)

        for neighbor in graph[node]:
            if neighbor not in visited:
                visited.add(neighbor)
                queue.append(neighbor)

    return bfs_order


input_file = open("/content/Input2.txt", "r")
output_file = open("/content/Output2.txt", "w")


N, M = map(int, input_file.readline().split())
roads = []
for _ in range(M):
    u, v = map(int, input_file.readline().split())
    roads.append((u, v))

adj_list = defaultdict(list)
for u, v in roads:
    adj_list[u].append(v)
    adj_list[v].append(u)


bfs_result = bfs(adj_list, 1)

output_file.write(' '.join(map(str, bfs_result)))
input_file.close()
output_file.close()