# -*- coding: utf-8 -*-
"""CSE221_LAB02_Task2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MzgI-rgAHS8TKX2JOsAC6tQQFYhDwSNV
"""

#Task-2(a)
def merge_sorted_lists_nlogn(alice_list, bob_list):
    merged_list = []
    alice_index = 0
    bob_index = 0

    while alice_index < len(alice_list) and bob_index < len(bob_list):
        if alice_list[alice_index] <= bob_list[bob_index]:
            merged_list.append(alice_list[alice_index])
            alice_index += 1
        else:
            merged_list.append(bob_list[bob_index])
            bob_index += 1

    merged_list.extend(alice_list[alice_index:])
    merged_list.extend(bob_list[bob_index:])

    return merged_list


#Task-2(b)
def merge_sorted_lists_n(alice_list, bob_list):
    merged_list = [None] * (len(alice_list) + len(bob_list))
    alice_index = len(alice_list) - 1
    bob_index = len(bob_list) - 1
    merged_index = len(merged_list) - 1

    while alice_index >= 0 and bob_index >= 0:
        if alice_list[alice_index] >= bob_list[bob_index]:
            merged_list[merged_index] = alice_list[alice_index]
            alice_index -= 1
        else:
            merged_list[merged_index] = bob_list[bob_index]
            bob_index -= 1
        merged_index -= 1

    while alice_index >= 0:
        merged_list[merged_index] = alice_list[alice_index]
        alice_index -= 1
        merged_index -= 1

    while bob_index >= 0:
        merged_list[merged_index] = bob_list[bob_index]
        bob_index -= 1
        merged_index -= 1

    return merged_list

with open('/content/Input2.txt.txt', 'r') as file:
    n = int(file.readline())
    alice_list = list(map(int, file.readline().split()))
    m = int(file.readline())
    bob_list = list(map(int, file.readline().split()))

merged_list_nlogn = merge_sorted_lists_nlogn(alice_list, bob_list)
merged_list_n = merge_sorted_lists_n(alice_list, bob_list)

print("Merged List (O(n log n) complexity):", merged_list_nlogn)
print("Merged List (O(n) complexity):", merged_list_n)