# -*- coding: utf-8 -*-
"""Task03_LAB06.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19EyoX4q79u7OOD60Z6--pgBIw8uJedB1
"""

file_input = open("/content/Input3..txt", "r")
file_output = open("/content/Output3.txt", "w")

list_1 = file_input.readline().split()
N, K = int(list_1[0]), int(list_1[1])

parent = [i for i in range(N + 1)]
size = [1] * (N + 1)

def find(x):
    if parent[x] != x:
        parent[x] = find(parent[x])
    return parent[x]

def union(x, y):
    root_x = find(x)
    root_y = find(y)

    if root_x != root_y:
        if size[root_x] < size[root_y]:
            root_x, root_y = root_y, root_x
        parent[root_y] = root_x
        size[root_x] += size[root_y]

for _ in range(K):
    friendship = list(map(int, file_input.readline().split()))
    person_1, person_2 = friendship[0], friendship[1]
    union(person_1, person_2)
    friend_circle_size = size[find(person_1)]
    file_output.write(str(friend_circle_size) + '\n')

file_input.close()
file_output.close()